
package Converter;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.JOptionPane;
/**
 *
 * @author Mr Sagar Kumar
 */
public class Converter extends javax.swing.JFrame {

    /**
     * Creates new form Converter
     */
    public Converter() {
        initComponents();
        /*The focus listeners: When the user place the cursor in the AmountTextField with keyboard or using the TAB key then, 
        when cursor enters text field will be empty, when the cursor exits then the text field will have the same text "Enter Amount Here" 
        Note: We also have defined a listener named 'AmountTextFieldMouseClicked( )' in case the user clicks on text field using the mouse, then 
        the text field should get empty and allow the user to enter only positive digits.
        */
         AmountTextField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (AmountTextField.getText().equals("Enter the Amount")) 
                 {
                    
                     AmountTextField.setText("");
                      // Set the font style and color of AmountTextField
                    Font font = AmountTextField.getFont();
                    AmountTextField.setFont(new Font(font.getFontName(), Font.BOLD, font.getSize()));
                    AmountTextField.setForeground(Color.BLACK);
                 }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (AmountTextField.getText().isEmpty()) {
                    AmountTextField.setText("Enter the Amount");
                    AmountTextField.setForeground(Color.GRAY);
                }
                 if(!(AmountTextField.getText().equals("Enter the Amount")))
                         AmountTextField.setForeground(Color.BLACK);
                
            }
        });


         /*Add ActionListener to the text field, in case user press the 'Enter' key on the 'Convert' Button| Set ConvertButton as the default button*/
            getRootPane().setDefaultButton(ConvertButton);

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        CurrencyPanel = new javax.swing.JPanel();
        AmountTextField = new javax.swing.JTextField();
        FromComboBox = new javax.swing.JComboBox<>();
        FromLabel = new javax.swing.JLabel();
        ToLabel = new javax.swing.JLabel();
        ToComboBox = new javax.swing.JComboBox<>();
        HeaderPanel = new javax.swing.JPanel();
        HeaderLabel = new javax.swing.JLabel();
        ResultLabel = new javax.swing.JLabel();
        SignLabel = new javax.swing.JLabel();
        ConvertButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPanel.setBackground(new java.awt.Color(51, 153, 255));

        CurrencyPanel.setBackground(new java.awt.Color(255, 255, 255));
        CurrencyPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        AmountTextField.setForeground(new java.awt.Color(204, 204, 204));
        AmountTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AmountTextField.setText("Enter the Amount");
        AmountTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 153, 255)));
        AmountTextField.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                CursorPreventerOrFocusChanger(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        AmountTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AmountTextFieldMouseClicked(evt);
            }
        });

        FromComboBox.setBackground(new java.awt.Color(51, 153, 255));
        FromComboBox.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        FromComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD  $", "EUR  €", "INR  ₹", "PKR  Rs" }));
        FromComboBox.setToolTipText("Select Currency");
        FromComboBox.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        FromComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        FromLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        FromLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FromLabel.setText("From");

        ToLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        ToLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ToLabel.setText("To");

        ToComboBox.setBackground(new java.awt.Color(51, 153, 255));
        ToComboBox.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ToComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD  $", "EUR  €", "INR  ₹", "PKR  Rs" }));
        ToComboBox.setToolTipText("Select Currency");
        ToComboBox.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ToComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        HeaderPanel.setBackground(new java.awt.Color(0, 0, 0));

        HeaderLabel.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        HeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        HeaderLabel.setText("Currency Converter");

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(HeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(HeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        ResultLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N

        SignLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N

        ConvertButton.setBackground(new java.awt.Color(51, 153, 255));
        ConvertButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        ConvertButton.setText("Convert");
        ConvertButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConvertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CurrencyPanelLayout = new javax.swing.GroupLayout(CurrencyPanel);
        CurrencyPanel.setLayout(CurrencyPanelLayout);
        CurrencyPanelLayout.setHorizontalGroup(
            CurrencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeaderPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(CurrencyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CurrencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CurrencyPanelLayout.createSequentialGroup()
                        .addComponent(FromComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ToComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(CurrencyPanelLayout.createSequentialGroup()
                        .addComponent(AmountTextField)
                        .addContainerGap())
                    .addGroup(CurrencyPanelLayout.createSequentialGroup()
                        .addGroup(CurrencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CurrencyPanelLayout.createSequentialGroup()
                                .addComponent(FromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129)
                                .addComponent(ToLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CurrencyPanelLayout.createSequentialGroup()
                                .addComponent(SignLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(CurrencyPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(ConvertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        CurrencyPanelLayout.setVerticalGroup(
            CurrencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrencyPanelLayout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(AmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CurrencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CurrencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ToComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(FromComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CurrencyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SignLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ConvertButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CurrencyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CurrencyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AmountTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AmountTextFieldMouseClicked
        if(AmountTextField.getText().equals("Enter the Amount")) 
            AmountTextField.setText("");
        AmountTextField.setFont(AmountTextField.getFont().deriveFont(Font.CENTER_BASELINE));
        AmountTextField.setForeground(Color.BLACK);
    }//GEN-LAST:event_AmountTextFieldMouseClicked

    private void ConvertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertButtonActionPerformed
        double amount=0.0;
        if(AmountTextField.getText().equals("Enter the Amount") || AmountTextField.getText().isEmpty()) JOptionPane.showMessageDialog(null, "Enter the Amount Please");
        
        else if(Double.parseDouble(AmountTextField.getText())<0) JOptionPane.showMessageDialog(null, "Enter valid Amount");

        else
        {
            String str = AmountTextField.getText().replaceAll("[^0-9\\.]", "");
            amount = Double.parseDouble(str);
                if(FromComboBox.getSelectedItem().equals(ToComboBox.getSelectedItem())) 
               {  
                   SignLabel.setText((String) ToComboBox.getSelectedItem());
                    ResultLabel.setText(AmountTextField.getText());
               }
                else if( (FromComboBox.getSelectedIndex()==0))
                {   
                    SignLabel.setText((String)ToComboBox.getSelectedItem());
                    switch(ToComboBox.getSelectedIndex())
                    {
                        case 1 -> ResultLabel.setText(String.valueOf(amount*0.95));
                        case 2 -> ResultLabel.setText(String.valueOf(amount*83.26));
                        case 3 -> ResultLabel.setText(String.valueOf(amount*279.76));
                    }
                }
                else if(FromComboBox.getSelectedIndex()==1)
                {
                    SignLabel.setText((String)ToComboBox.getSelectedItem());
                    switch(ToComboBox.getSelectedIndex())
                    {
                        case 0 -> ResultLabel.setText(String.valueOf(amount*1.05));
                        case 2 -> ResultLabel.setText(String.valueOf(amount*87.70));
                        case 3-> ResultLabel.setText(String.valueOf(amount*294.89));
                    }
                }
                else if(FromComboBox.getSelectedIndex()==2)
                {
                    SignLabel.setText((String)ToComboBox.getSelectedItem());
                    switch(ToComboBox.getSelectedIndex())
                    {
                        case 0 -> ResultLabel.setText(String.valueOf(amount*0.012));
                        case 1 -> ResultLabel.setText(String.valueOf(amount*0.011));
                        case 3-> ResultLabel.setText(String.valueOf(amount*3.36));
                    }
                }
                else if(FromComboBox.getSelectedIndex()==3)
                {
                    SignLabel.setText((String)ToComboBox.getSelectedItem());
                    switch(ToComboBox.getSelectedIndex())
                    {
                        case 0-> ResultLabel.setText(String.valueOf(amount*0.0036));
                        case 1-> ResultLabel.setText(String.valueOf(amount*0.0034));
                        case 2-> ResultLabel.setText(String.valueOf(amount*0.30));
                    }
                }
        }
        
    }//GEN-LAST:event_ConvertButtonActionPerformed

    /*this method will make the cursor to focus on the convert button rather than the AmountTextField or any other immediate text field when the application gets start*/
    private void CursorPreventerOrFocusChanger(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_CursorPreventerOrFocusChanger
        ConvertButton.requestFocusInWindow();
    }//GEN-LAST:event_CursorPreventerOrFocusChanger
    
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        
        java.awt.EventQueue.invokeLater(() -> {
            new Converter().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AmountTextField;
    private javax.swing.JButton ConvertButton;
    private javax.swing.JPanel CurrencyPanel;
    private javax.swing.JComboBox<String> FromComboBox;
    private javax.swing.JLabel FromLabel;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JLabel SignLabel;
    private javax.swing.JComboBox<String> ToComboBox;
    private javax.swing.JLabel ToLabel;
    // End of variables declaration//GEN-END:variables
}
